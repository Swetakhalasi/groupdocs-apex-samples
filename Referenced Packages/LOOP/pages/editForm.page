<apex:page standardController="Loop__DDP__c" extensions="Loop.editFormExt" title="Form Edit: {!ddpWrapper.DDP.Name}" id="ap">
<style>
    div.bgdl {
        height: 41px;
        padding-left: 4px;
        height: 38px;
        border-bottom: 3px solid #178AFF;
        margin-top: -15px;
    }
    ul.tabs {
        padding: 0;
        margin: 0;
    }
    ul.tabs li {
        float: left;
        border-color: #BBBBBB #BBBBBB transparent;
        border-style: solid;
        border-width: 1px 1px 0 1px;
        background-color: #F1F1F1;
        -moz-border-radius: 4px 4px 0 0;
        -webkit-border-radius: 4px 4px 0 0;
        display: inline-block;
        padding: 0 8px;
        height: 32px;
        margin: 5px 0 -3px 5px;
    }
    ul.tabs li div.outer {
        padding-bottom: 2px;
        font-weight: bold;
        margin-right: -13px;
        padding: 8px 8px 4px 0;
    }
    ul.tabs li div.outer div {
        line-height: normal;
        margin: 0;
        padding 0;
    }
    ul.tabs li div.outer div a { text-decoration: none; }
    span.defaultspan span a, span.defaultspan a { text-decoration: none; }
    ul.tabs li.active {
        /*height: 35px;*/
        border-bottom: 3px solid #E2E7EF;
        border-color: #178AFF #178AFF #E2E7EF;
        background: -moz-linear-gradient(90deg,#E2E7EF,#FFFFFF);
        background: -webkit-gradient(linear, center bottom, center top, from(#E2E7EF), to(#FFFFFF));
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#FFFFFF, endColorstr=#E2E7EF)";
    }
    ul.tabs li {
        border-bottom: 3px solid #178AFF;
    }
    div.dlPageBlock {
        border-top: 3px solid #178AFF;
        -moz-border-radius: 4px 4px 4px 4px;
        -webkit-border-radius: 4px 4px 4px 4px;
    }
    div.dlPageBlock div.pbSubheader.tertiaryPalette {
        margin-top: 0;
        border-width: 0;
    }
    body .pbBody table.list tr.topAlign td { vertical-align: top; }
    .invisible { display: none; }
    div.jqInfo {
        position: absolute;
        display: none;
        border: 3px solid #A4CAEE;
        background-color: #FFFFFF;
        width: 205px;
        padding: 10px;
    }
    div.jqInfo ul {
        padding: 0;
        margin: 10px 0px 5px 25px;
    }
    img.jqInfoIcon {
        vertical-align: top;
        cursor: pointer;
    }
    .pointer { cursor: pointer; }
    
    /* New Styles */
    .tab {
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
    }
    .tab div {
        background-image: none;
    }
    .tab .outer div {
    	padding: 0;
    }
    .content > div {
        display: none;
    }
    .content {
        margin-top: 0;
    }
    .bPageBlock .pbBody .content .pbSubheader {
        margin-top: 0;
        border-top: transparent;
    }
    .content > .active {
        display: block;
    }
    .formLoading {
        position: absolute;
        height: 100%;
        width: 100%;
        top: 0;
        left: 0;
        padding: 0;
        background-color: white;
        border: 1px solid #CACACA;
        color: #666;
        font-size: 95%;
        text-align: center;
        font-weight: bold;
        margin-left: auto;
        margin-right: auto;
    }
    .formLoading .loadingContent {
        padding: 70px 0 0;
        height: 100%;
    }
    .formLoading img {
        border: none;
        vertical-align: middle;
    }
    /* ActionSupport Styles */
    .statusContainer {
        position: relative;
        padding: 1px 0 0 5px;
    }
    .status {
        right: -24px;
        top: 0;
    }
    .status.isIE {
        top: -11px;
    }
    .msgStepEmpty {
    	padding: 15px 10px 3px;
    	font-weight: bold;
    }
    .hiddenCell, .hidden {
    	display: none;
    }
    .sfDefaultValueOn .defaultView, 
    .sfObjectView, .sfFieldView {
    	display: none;
    }
    .sfDefaultValueOn .sfObjectView, .sfDefaultValueOn .sfFieldView {
    	display: block;
    }
    .colSelect {
    	width: 25px;
    }
</style>
<apex:includeScript value="{!URLFOR($Resource.Loop__Scripts, 'jquery-code.js')}" />
<apex:includeScript value="{!URLFOR($Resource.Loop__Scripts, 'jquery.ui.js')}" /> 
<apex:includeScript value="{!URLFOR($Resource.Loop__Scripts, 'json2.js')}" /> 
<script type="text/javascript">
    jQuery.noConflict();
    function sortHandle(event, ui) {
        jQuery('[id="ap:af:pb:fpbs:pbt:tb"] tr').each( function(i) {
            jQuery(this).find('[id$="fieldOrder"]').val(i);
        });
    }
    function usesListValues(fieldType) {
        return fieldType == 'Drop Down' || fieldType == 'Edit Drop Down' || fieldType == 'Radio'
                || fieldType == 'Radio Inline' || fieldType == 'Checkbox' || fieldType == 'Checkbox Inline';
    }
    // this is supposed to give focus to the text / textarea input immediately above or below the current one
    function keyUp(event) {
        if (event.keyCode == 38 || event.keyCode == 40) { // Up Arrow or Down Arrow keys
            if (event.target.type != 'textarea' || event.ctrlKey) {
                var target = jQuery(event.target);
                var targetId = target.attr('id').split(':').pop();
                var a = target.parent();
                while (!a.is('tr'))
                    a = a.parent();
                switch (event.keyCode) {
                    case 38:
                        a = a.prev();
                        break;
                    case 40:
                        a = a.next();
                        break;
                }
                a.find('[id$=":'+targetId+'"]').select();
            }
        }
    }
    function addOverlay(msg, disableFormButtons) {
        if (!msg) msg = 'Processing...';
        removeOverlay();
        if (disableFormButtons) {
        	disableAllFormButtonsButCancel();
        }
        var $container = jQuery('.editPage .pbBody').css('position', 'relative');
        $container
            .append(
                jQuery('<div class="formLoading"><div class="loadingContent"></div></div>')
                    .find('.loadingContent')
                        .append('<img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..."/>')
                        .append(
                            jQuery('<span class="loadingText"></span>')
                                .text(msg)
                        )
                    .end()
                    .css({
                        height: $container.height() - 2,
                        width: $container.width() - 2
                    })
            );
    }
    function removeOverlay() {
        jQuery('.editPage .pbBody .formLoading').remove();
    };
    function initializeTabs(vfId, startIndex, requestToLoadFields) {
    	enableFormButtons();
        var selector = '[id$="' + vfId + '"]';
        window.tabs = new TabManager(selector, startIndex);
        
        for (var i = 0; i < tabs.tabs.length; i++) {
        	tabs.tabs[i].init();
        }
        
        if (requestToLoadFields) {
        	jQuery(function() {
				tabs.loadAdditionalFields();
			});
        } else {
        	removeOverlay();
       	}
    };
    function toggleAddDaysView(select) {
    	jQuery(select).closest('td').find('.addDaysView').toggleClass('hidden', select.value != 'Today+');
    };
    function enableFormButtons() {
    	$getFormButtons().addClass('btn').removeClass('btnDisabled').each(function(i, e) {
    		var origText = jQuery(this).data('origText');
    		if (origText) {
    			this.value = origText;
    		}
    	});
    };
    function disableFormButtons(replacementText) {
    	$getFormButtons().addClass('btnDisabled').removeClass('btn').each(function(i, e) {
    		if (replacementText !== undefined) {
	    		jQuery(this).data('origText', this.value).val(replacementText);
    		}
    	});
    };
    function disableAllFormButtonsButCancel() {
    	$getFormButtons().filter(':not(.btnCancel)').addClass('btnDisabled').removeClass('btn');
    };
    function $getFormButtons() {
    	return jQuery('.pbButton input, .pbButtonb input');
    };
    function getTabManager() {
        return window.tabs;
    }
    function TabManager(selector, startIndex) {
        this.$elem = jQuery(selector),
        this.$tabs = this.$elem.find('.tabs'),
        this.$allContent = this.$elem.find('.content');
        this.tabs = [];
        this.stepEmptyMessage = 'No fields exist for this step.';
        this.ignoredStepId = '-1';
        this.deletedFieldIds = [];
        //this.$contentTemplate = this.$allContent.children('div:eq(0)').clone(true).removeClass().attr('id');
        var tabManager = this;
        this.$tabs.find('.tab').each(function(i, e) {
            tabManager.tabs.push(new Tab(i, tabManager));
        });
        
        // Add messages for empty steps
        for (var i = 0; i < this.tabs.length; i++) {
        	this.tabs[i].setStepEmptyMessage(!this.tabs[i].hasRows());
        }

        this.goToIndex(startIndex || 0);
    };
    TabManager.prototype.goTo = function(tabId) {
        var index = this.getIndexByUniqueId(tabId);
        if (index > -1) {
            this.goToIndex(index);
        }
    };
    TabManager.prototype.goToIndex = function(index) {
        var i = index * 1;
        if (i < 0 || i >= this.tabs.length) i = 0;
        this.$tabs.find('.tab').removeClass('active').filter(':eq(' + i + ')').addClass('active');
        this.$allContent.children('div').removeClass('active').filter(':eq(' + i + ')').addClass('active');
        this.activeIndex = i;
    };
    TabManager.prototype.getTabByUniqueId = function(tabId) {
    	var index = this.getIndexByUniqueId(tabId);
    	return index > -1 ? this.tabs[index] : null;
    };
    TabManager.prototype.getIndexByUniqueId = function(tabId) {
        for (var i = 0; i < this.tabs.length; i++) {
            if (this.tabs[i].getId() == tabId)
                return i;
        }
        return -1;
    };
    TabManager.prototype.getTabIndex = function(tab) {
        return jQuery(this.tabs).index(tab);
    }
    TabManager.prototype.getCurrentStepId = function() {
        var tab = this.getActiveTab();
        return tab ? tab.getId() : null;
    };
    TabManager.prototype.getActiveTab = function() {
        return this.tabs[this.activeIndex];
    };
    TabManager.prototype.getIgnoredTab = function() {
    	return this.getTabByUniqueId(this.ignoredStepId);
    };
    TabManager.prototype.getSyncData = function() {
	    var steps = [];
	    for (var i = 0; i < tabs.tabs.length; i++) {
	        steps.push({
	            uid: tabs.tabs[i].getId(),
	            name: tabs.tabs[i].getName(),
	            fieldIds: tabs.tabs[i].getFieldIds()
	        });
	    }
	    return {
	    	steps: steps,
	    	deletedFieldIds: this.deletedFieldIds
    	};
    };
    TabManager.prototype.addStep = function(name) {
        log('adding step name: ' + name);
        var updateInfo = tabs.getSyncData();
        addOverlay('Adding step...', true);
        addStep(name, JSON.stringify(updateInfo));
        return false;
    };
    TabManager.prototype.deleteStep = function(tab) {
        var updateInfo = tabs.getSyncData();
        addOverlay('Deleting step...', true);
        deleteStep(tab.getId(), JSON.stringify(updateInfo));
        return false;
    };
    TabManager.prototype.performWithSelected = function(operation) {
        var tab = this.getActiveTab();
        if (tab == null) {
            return;
        }
        var startStepId = tab.getId(),
            $selected = tab.$getSelected();
        if ($selected.length == 0) {
            alert('No fields selected.');
            tab.$getMoveFieldsDropdown().val('');
            return false;
        }
        return operation(tab, $selected);
    };
    TabManager.prototype.animateShowRows = function($arr, callback) {
       	$arr.fadeTo(250, 1, function() {
       		jQuery(this).show();
       		callback && callback.apply(this);
       	});    
    };
    TabManager.prototype.animateHideRows = function($arr, callback) {
    	var pauseTime = 250,
    		t = $arr.length,
    		n = 0;
       	$arr.fadeTo(pauseTime, 0, function() {
       		n++;
       		jQuery(this).hide();
       		if (n == t) {
       			return callback && callback.apply(this);
       		}
       	});
    };
    TabManager.prototype.deleteSelected = function() {
        return this.performWithSelected(function(tab, $selected) {
        	if (confirm('Are you sure?')) {
	        	tab.tabManager.animateHideRows($selected, function() {
	        		$selected.each(function(i, e) {
		        		var row = this,
		        			recordId = jQuery(row).addClass('deletedField').find('.select').val();
		       			tab.tabManager.deletedFieldIds.push(recordId);
	       			});
	        	});
	        	tab.setSelectAllCheckbox(false);
        	}
        });
    };
    TabManager.prototype.ignoreSelected = function() {
    	var endTab = this.getIgnoredTab();
        return this.performWithSelected(function(tab, $selected) {
        	tab.removeRows($selected, function($rows) {
        		$rows.find('.select').attr('checked', false);
        		endTab.addRows($rows, null);
        	});
        	tab.setSelectAllCheckbox(false);
            tab.$getMoveFieldsDropdown().val('');
        });
    };
    TabManager.prototype.moveSelected = function(endStepId) {
        if (!endStepId) {
            return false;
        }
   		var endTab = this.getTabByUniqueId(endStepId);
        this.performWithSelected(function(tab, $selected) {
        	tab.removeRows($selected, function($rows) {;
        		$rows.find('.select').attr('checked', false);
        		endTab.addRows($rows);
        	});
        	tab.setSelectAllCheckbox(false);
            tab.$getMoveFieldsDropdown().val('');
        });
    };
	TabManager.prototype.loadAdditionalFields = function(msg) {
		var updateInfo = tabs.getSyncData();
	    addOverlay(msg || 'Retrieving DDP fields...', true);
	    loadAdditionalFields(tabs.getCurrentStepId(), JSON.stringify(updateInfo));
	};
    /*TabManager.prototype.generate$tab = function(name) {
        return jQuery('<li class="tab"></li>')
            .append(
                jQuery('<div class="outer"><div></div></div>')
                    .find('div')
                        .append(
                            jQuery('<span class="pointer name"></span>')
                                .text(name)
                        )
                        .append('<img src="https://apps.drawloop.com/images/icons/platform/edit.gif" alt="edit" class="pointer edit" />')
                        .append('<img src="https://apps.drawloop.com/images/icons/platform/cross.png" alt="delete" class="delete" />')
            );
    };*/
    function Tab(index, tabManager) {
    	this.index = index;
        this.tabManager = tabManager;
        this.init();
    };
    Tab.prototype.getItem = function() {
    	return this.tabManager.$tabs.find('.tab:eq(' + this.index + ')');
    };
    Tab.prototype.getContent = function() {
    	return this.tabManager.$allContent.children('div:eq(' + this.index + ')');    
    };
    Tab.prototype.init = function() {
    	this.initItem();
    	this.initContent();
    };
    Tab.prototype.initItem = function() {
        // init event handlers
        var tab = this;
        this.getItem().unbind('click').click(function() {
            tab.activate();
        });
        this.getItem().find('.edit').unbind('click').click(function() {
            var newName = prompt('Step Name', tab.getName());
            if (newName) {
            	var oldName = tab.getName();
                tab.setName(newName);
                for (var i = 0; i < tab.tabManager.tabs.length; i++) { 
                	tab.tabManager.tabs[i].$getMoveFieldsDropdown().find('option')
                		.filter(function(i, e) {
                			return e.value == tab.getId() && jQuery(e).text() == oldName;
                		}).text(newName);
                }
            }
            return false;
        });
        this.getItem().find('.delete').unbind('click').click(function() {
            if (confirm('Are you sure?')) {
                return tabs.deleteStep(tab);
                //tab.tabManager.deleteStep(tab);
            }
            return false;
        });
    };
    Tab.prototype.initContent = function() {
        var $tabScope = this.getContent();
        // Setup buttons / options
        jQuery('.selectall', $tabScope).unbind('click').click(function() {
            jQuery(this).closest('table').find(':checkbox.select').attr('checked', jQuery(this).attr('checked'));
        });
        jQuery('.select', $tabScope).unbind('click').click(function(e) {
            var tab = tabs.getActiveTab();
            if (e.shiftKey && tab && tab.previouslySelectedCheckbox) {
                var $checkboxes = tab.getContent().find('.select');
                var index = $checkboxes.index(this),
                    prevIndex = $checkboxes.index(tab.previouslySelectedCheckbox);
                tab.getContent().find('.select').slice(Math.min(index, prevIndex), Math.max(index, prevIndex) + 1).not(this).attr('checked', this.checked);
            }
            if (tab)
                tab.previouslySelectedCheckbox = this;
        });
        jQuery('.selectMoveFields', $tabScope).unbind('change').change(function() {
            tabs.moveSelected(this.value);
        });
        jQuery('.btnIgnore', $tabScope).unbind('click').click(function() {
            tabs.ignoreSelected();
            return false;
        });
        jQuery('.btnDelete', $tabScope).unbind('click').click(function() {
            tabs.deleteSelected();
            return false;
        });
        jQuery('.fldFieldType', $tabScope).unbind('change').change(function() {
        	jQuery(this).closest('tr').find('.conListValues').toggleClass('hidden', !usesListValues(this.value));
        }).change();
        jQuery('.lookupIcon', $tabScope).unbind('mouseenter mouseleave').hover(function() {
        	jQuery(this).addClass('lookupIconOn');
        }, function() {
        	jQuery(this).removeClass('lookupIconOn');
        }).unbind('click').click(function() {
        	jQuery(this).closest('.defaultspan')
        		.addClass('sfDefaultValueOn')
        		.find('[id$=":usesSalesforceDefaultValue"]').val('true');
       		var $input = jQuery(this).closest('.defaultspan').find('.defaultView input');
       		$input.data('prevValue', $input.val());
        });
        jQuery('.hideSFDefaultValueView', $tabScope).unbind('click').click(function() {
        	jQuery(this).closest('.defaultspan')
        		.removeClass('sfDefaultValueOn')
        		.find('[id$=":usesSalesforceDefaultValue"]').val('false');
       		var $input = jQuery(this).closest('.defaultspan').find('.defaultView input');
       		$input.val($input.data('prevValue') || '');
        });
        jQuery('.tblFields :text,.tblFields select,.tblFields :checkbox', $tabScope).unbind('keydown').keydown(function(e) {
        	return e.keyCode != 13; // do not submit form when 'Enter' key is pressed
        });
        console.log('initContent');
        
        // Setup sortable rows
        jQuery('.tblFields tbody', $tabScope)
        	.sortable({
       			axis: 'y', 
       			items: 'tr',
       			cursor: 'move',
				helper: function(e, tr) {
				  var $originals = tr.children();
				  var $helper = tr.clone();
				  $helper.children().each(function(index)
				  {
				    // Set helper cell sizes to match the original sizes
				    jQuery(this).width($originals.eq(index).width())
				  });
				  return $helper;
				}
			})
        	.unbind('sortstop').bind('sortstop', sortHandle);
    };
    Tab.prototype.getId = function() {
        return this.getItem().find('.uniqueId').val();
    };
    Tab.prototype.getName = function() {
        return this.getItem().find('.name').text();
    };
    Tab.prototype.setName = function(name) {
        this.getItem().find('.name').text(name);
    };
    Tab.prototype.getFieldIds = function() {
        return jQuery.makeArray(this.$getFieldRows().not('.deletedField').find(':checkbox.select').map(function(i, e) { return this.value; }));
    };
    Tab.prototype.$getSelected = function() {
        return this.$getFieldRows().not('.deletedField').find(':checkbox.select:checked').closest('tr');
    };
    Tab.prototype.$getFieldRows = function() {
    	return this.getContent().find('.list tr');
    }; 
    Tab.prototype.$getTable = function() {
    	return this.getContent().find('.list');
    };
    Tab.prototype.setStepEmptyMessage = function(display) {
    	if (display && this.getContent().find('.msgStepEmpty').size() == 0) {
    		this.getContent().find('.tblFields').after(
    			jQuery('<div class="msgStepEmpty"></div>')
    				.text(this.tabManager.stepEmptyMessage)
			);
    	} else {
    		this.getContent().find('.msgStepEmpty').remove();
    	}
    };
    Tab.prototype.isIgnored = function() {
    	return this.getId() == this.tabManager.ignoredStepId;
    };
    Tab.prototype.hasRows = function() {
    	return this.getContent().find('.tblFields tbody tr').size() > 0;
    };
    Tab.prototype.removeRows = function(rows, callback) {
    	var tab = this;
    	var shouldAnimate = true;//rows.length <= 20;
    	if (shouldAnimate) {
	    	var rowsComplete = 0,
	    		totalRows = rows.length,
	    		$rows = jQuery(rows);
	    	this.tabManager.animateHideRows($rows, function() {
    			var $allRows = tab.$getFieldRows();
    			// get row indices
    			var table = tab.$getTable()[0];
    			if (table) {
    				// selected indices, reversed
	    			var indices = jQuery.makeArray($rows.map(function(i, e) { return $allRows.index(e); }));
	    			indices.sort(function(a,b) { return b-a; });
		    		for (var i = 0; i < indices.length; i++) {
		    			table.deleteRow(indices[i]);
		    		}
		    		if (!tab.hasRows()) {
		    			tab.setStepEmptyMessage(true);
		    		}
	    			callback && callback.call(this, $rows);
	    		}
	    		
	    		enableFormButtons();
   				removeOverlay();
	    	});
    	} else {
    		addOverlay(null, true);
	    	setTimeout(function() {
	    		jQuery(rows).hide().remove();
	    		if (!tab.hasRows()) {
	    			tab.setStepEmptyMessage(true);
	    		}
	    		if (callback) {
	    			jQuery(rows).each(function(i, e) {
	    				callback && callback.apply(e);
	    			});
	   			}
	   			removeOverlay();
  	   		}, 100);
    	}
    };
    Tab.prototype.addRows = function(rows, callback) {
    	var $rows = jQuery(rows);
    	var shouldAnimate = false;
    	$rows.find('.hideOnIgnore').toggleClass('hiddenCell', this.isIgnored());
    	this.getContent().find('.tblFields tbody:last').append($rows);
    	//if (shouldAnimate) {
	    //   	this.tabManager.animateShowRows(jQuery(rows), function() {
	    //   		callback && callback.apply(this);
	    //   	});
       	//} else {
       		$rows.css('opacity', 1).show();
       		if (callback) {
	       		jQuery(rows).each(function(i, e) {
	       			callback && callback.apply(e);
	       		});
       		}
       		this.initContent();
       	//}
       	this.setStepEmptyMessage(false);
    };
    Tab.prototype.setSelectAllCheckbox = function(checked) {
    	this.getContent().find('.selectall').attr('checked', checked);
    };
    Tab.prototype.$getMoveFieldsDropdown = function() {
        return this.getContent().find('.selectMoveFields');
    };
    Tab.prototype.getIndex = function() {
        return this.tabManager.getTabIndex(this);
    };
    Tab.prototype.activate = function() {
        this.tabManager.goToIndex(this.getIndex());
    };
    function log(msg) {
        window.console && window.console.log && window.console.log(msg);
    };
</script>
<apex:outputPanel id="js">
    <script type="text/javascript">
        jQuery(function () {
            /*
            jQuery('[id="ap:af:pb:fpbs"]').addClass('dlPageBlock');
            jQuery('div.selectedTab').parent().addClass('selectedTab');
            jQuery('div.notSelectedTab').parent().addClass('notSelectedTab');
            jQuery('[id="ap:af:pb:fpbs:pbt:tb"]').sortable({ axis: 'y', items: 'tr', cursor: 'move' }).bind('sortstop', sortHandle);
            jQuery('[id$=":fieldType"]').each(function() {
                listValuesVisibility(this);
            });
            */
            jQuery('body').click(function(e) { if (!jQuery(e.target).hasClass('jqInfoIcon')) jQuery('#listHelp,#validationHelp').hide(); });
            jQuery('#validationHelp li').click(function(e) {
                if (jQuery('#validationHelp').attr('val'))
                    jQuery('[id="'+jQuery('#validationHelp').attr('val')+'"]').text(jQuery(e.target).attr('val'));
            });
            jQuery('#listHelp li').click(function(e) {
                if (jQuery('#listHelp').attr('val'))
                    jQuery('[id="'+jQuery('#listHelp').attr('val')+'"]').text(jQuery(e.target).attr('val').replace(/\|/g, '\n'));
            });
            jQuery('form.myForm input, form.myForm textarea').live('keyup', keyUp);
            
            // Initialize form buttons
            jQuery('.btnSave,.btnQuickSave,.btnSaveAndRun').unbind('click').click(function() {
            	var isDisabled = jQuery(this).hasClass('btnDisabled');
            	if (!isDisabled) {
	            	var $btn = jQuery(this);
	                var updateInfo = tabs.getSyncData();
	                addOverlay('Saving form...');
	                var f = quickSave;
	                if ($btn.hasClass('btnQuickSave')) {
	                	disableAllFormButtonsButCancel();
	                } else {
		                disableFormButtons('Saving...');
		                if ($btn.hasClass('btnSave'))
		                	f = save;
		               	else if ($btn.hasClass('btnSaveAndRun'))
		               		f = saveAndRun;
	              	}
	                f(tabs.getCurrentStepId(), JSON.stringify(updateInfo));
                }
                return false;
            });
            jQuery('.btnLoadNewFields').unbind('click').click(function() {
            	tabs.loadAdditionalFields('Checking for additional fields...');
                return false;
            });
        });
    </script>
</apex:outputPanel>
    <apex:sectionHeader title="Form Edit" subtitle="{!ddpWrapper.DDP.Name}" help="http://support.drawloop.com/loop-platform/4-edit-forms/"/>
    <apex:outputPanel id="pageMsgs">
        <apex:pageMessages />
    </apex:outputPanel>
    <!--  New Form -->
    <apex:form id="afNew">
        <apex:pageBlock title="Form Edit" mode="edit" id="pb">
            <apex:actionFunction name="addStep" reRender="tabs,pageMsgs" action="{!addNewStep}">
                <apex:param value="" assignTo="{!ajaxStepName}" name="stepName" />
                <apex:param value="" assignTo="{!ajaxUpdateInfoStr}" name="updateInfo" />
            </apex:actionFunction>
            <apex:actionFunction name="deleteStep" reRender="tabs,pageMsgs" action="{!deleteStep}">
                <apex:param value="" assignTo="{!ajaxStepId}" name="stepId" />
                <apex:param value="" assignTo="{!ajaxUpdateInfoStr}" name="updateInfo" />
            </apex:actionFunction>
            <apex:actionFunction name="loadAdditionalFields" reRender="tabs,pageMsgs" action="{!loadAdditionalFields}">
                <apex:param value="" assignTo="{!ajaxStepId}" name="stepId" />
                <apex:param value="" assignTo="{!ajaxUpdateInfoStr}" name="updateInfo" />
            </apex:actionFunction>
            <apex:actionFunction name="saveAndRun" reRender="tabs,pageMsgs" action="{!performSaveAndRun}">
                <apex:param value="" assignTo="{!ajaxStepId}" name="currentStepId" />
                <apex:param value="" assignTo="{!ajaxUpdateInfoStr}" name="updateInfo" />
            </apex:actionFunction>
            <apex:actionFunction name="quickSave" reRender="tabs,pageMsgs" action="{!performQuickSave}">
                <apex:param value="" assignTo="{!ajaxStepId}" name="currentStepId" />
                <apex:param value="" assignTo="{!ajaxUpdateInfoStr}" name="updateInfo" />
            </apex:actionFunction>
            <apex:actionFunction name="save" reRender="tabs,pageMsgs" action="{!performSave}">
                <apex:param value="" assignTo="{!ajaxStepId}" name="currentStepId" />
                <apex:param value="" assignTo="{!ajaxUpdateInfoStr}" name="updateInfo" />
            </apex:actionFunction>
            <apex:pageBlockButtons >
                <apex:commandButton value="Save and Run" styleClass="btnSaveAndRun" style="border: 2px solid green;" rendered="{!ddpWrapper.DDP.RecordType.Name=='Form'}" />
                <apex:commandButton value="Load New Fields" title="Any new fields added to your DDP Files will be added to the current step of the form." styleClass="btnLoadNewFields" />
                <apex:commandButton value="Quick Save" styleClass="btnQuickSave" />
                <apex:commandButton value="Save" styleClass="btnSave" />
                <apex:commandButton value="Cancel" styleClass="btnCancel" action="{!cancel}" immediate="true" />
            </apex:pageBlockButtons>
            <!-- Message to first-time users -->
            <apex:pageBlockSection columns="1" id="pbs">
                <apex:pageBlockSectionItem rendered="{!AND(showEditFormMessage,ddpWrapper.DDP.RecordType.Name='Form')}" >
                    <apex:pageMessage severity="info" summary="Click Save and Run to test. You can edit your DDP form fields below. For help, click the Help for this Page link at the top right corner of this page.">
                        <apex:commandLink value="Remove this message." style="margin-left: 8px; font-size: 80%;" action="{!hideEditFormMessage}" rerender="pbs" status="removeMessage" />
                        <apex:actionStatus id="removeMessage" startText="• • •" stopText="" style="font-size: 80%;" />
                    </apex:pageMessage>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem rendered="{!AND(showEditFormMessage,ddpWrapper.DDP.RecordType.Name!='Form')}" >
                    <apex:pageMessage severity="info" summary="You can edit your DDP form fields below. For help, click the Help for this Page link at the top right corner of this page.">
                        <apex:commandLink value="Remove this message." style="margin-left: 8px; font-size: 80%;" action="{!hideEditFormMessage}" rerender="pbs" status="removeMessage2" />
                        <apex:actionStatus id="removeMessage2" startText="• • •" stopText="" style="font-size: 80%;" />
                    </apex:pageMessage>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputPanel styleClass="pbInfo" layout="block" id="quickSaveStatus">
                        <apex:outputPanel rendered="{!quickSaved}" id="quickSaveSpan">
                            Save was successful.
                            <script>jQuery('[id$=":quickSaveSpan"]').delay(2000).fadeOut(1000)</script>
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>

            <apex:outputPanel id="tabs">
                <apex:outputPanel styleClass="bgdl" layout="block" id="stepsDiv">
                    <ul class="tabs" style="float: none;">
                        <apex:repeat value="{!manager.AllSteps}" var="step">
                            <li class="tab pointer">
                                <apex:outputPanel layout="block" styleClass="outer">
                                    <div>
                                        <span class="pointer name">{!IF(!step.IsIgnored, step.Step.Name, 'ignored fields')}</span>
                                        <input type="hidden" class="uniqueId" value="{!HTMLENCODE(step.UniqueId)}" />
                                        <apex:image value="https://apps.drawloop.com/images/icons/platform/edit.gif"
                                            style="padding: 0 2px;" styleClass="pointer edit" alt="edit" rendered="{!NOT(step.IsIgnored)}" />
                                        <apex:image alt="delete" value="https://apps.drawloop.com/images/icons/platform/cross.png" styleClass="pointer delete" rendered="{!NOT(step.IsIgnored)}" />
                                    </div>
                                </apex:outputPanel>
                            </li>
                        </apex:repeat>
                        <li onclick="var ns = prompt('Step Name'); if (ns) return tabs.addStep(ns); else return false;">
                            <div class="outer pointer notSelectedTab"><span style="padding-right: 5px;">
                                <img src="https://apps.drawloop.com/graphics/icons/add_16.gif" />
                                add step
                            </span></div>
                        </li>
                    </ul>
                </apex:outputPanel>
                <apex:outputPanel layout="block" id="pbsOP" styleClass="content">
                    <apex:repeat value="{!manager.AllSteps}" var="step">
                        <apex:pageBlockSection title="{!$ObjectType.Loop__Form_Field__c.labelPlural}" collapsible="false" id="fpbs" columns="1">
                            <apex:outputPanel >
                                <apex:selectList styleClass="selectMoveFields" size="1">
                                    <apex:selectOption itemLabel="--move to--" itemValue="" />
                                    <apex:selectOptions value="{!step.stepOptions}" />
                                    <!-- <apex:actionSupport event="onchange" action="{!moveFieldsToStep}" reRender="fpbs,pageMsgs,js"
                                        onsubmit="if (jQuery('[id$=\':selected\']:checked').size()==0) { alert('No fields selected.'); this.value = ''; return false; }" />-->
                                </apex:selectList>
                                <apex:commandButton value="ignore" title="Ignore selected fields" styleClass="btnIgnore" rendered="{!NOT(step.IsIgnored)}" />
                                <apex:commandButton value="delete" title="Delete selected fields" styleClass="btnDelete" rendered="{!step.IsIgnored}" />
                                <apex:outputPanel rendered="{!step.IsIgnored}">
                                    Fields in this section will not be included in the web form.
                                </apex:outputPanel>
                            </apex:outputPanel>
                            <apex:pageBlockTable value="{!step.FieldList}" var="f" id="pbt" rowClasses="topAlign" styleClass="tblFields">
                                <apex:column id="fieldSelect" headerClass="colSelect" styleClass="colSelect">
                                    <apex:facet name="header">
                                        <input type="checkbox" value="on" class="selectall" />                                      
                                    </apex:facet>
                                    <input type="checkbox" value="{!HTMLENCODE(f.UniqueId)}" class="select" />
                                </apex:column>
                                <apex:column headerValue="{!$ObjectType.Loop__Form_Field__c.fields.Loop__Tag__c.label}" style="cursor: move;">
                                    <apex:outputField value="{!f.field.Loop__Tag__c}" id="fieldTag" />
                                    <apex:inputHidden value="{!f.field.Loop__Order__c}" id="fieldOrder" />
                                </apex:column>
                                <apex:column headerValue="{!$ObjectType.Loop__Form_Field__c.fields.Name.label}" headerClass="{!IF(step.IsIgnored, 'hiddenCell', '')}" styleClass="hideOnIgnore {!IF(step.IsIgnored, 'hiddenCell', '')}">
                                    <apex:inputField value="{!f.field.Name}" required="true" />
                                </apex:column>
                                <apex:column headerValue="{!$ObjectType.Loop__Form_Field__c.fields.Loop__Type__c.label}" headerClass="{!IF(step.IsIgnored, 'hiddenCell', '')}" styleClass="hideOnIgnore {!IF(step.IsIgnored, 'hiddenCell', '')}">
                                    <apex:inputField value="{!f.field.Loop__Type__c}" required="true" id="fieldType" styleClass="fldFieldType" />
                                </apex:column>
                                <apex:column headerValue="{!$ObjectType.Loop__Form_Field__c.fields.Loop__Default_Value__c.label}" headerClass="{!IF(step.IsIgnored, 'hiddenCell', '')}" styleClass="hideOnIgnore {!IF(step.IsIgnored, 'hiddenCell', '')}">
                                    <apex:outputPanel id="defaultPanel" styleClass="defaultspan {!IF(f.UsesSalesforceDefaultValue, 'sfDefaultValueOn', '')}">
                                        <apex:outputPanel style="white-space: nowrap;" styleClass="defaultView">
                                            <apex:inputField value="{!f.field.Loop__Default_Value__c}" />
                                            <a href="javascript:;"><img class="lookupIcon" title="select platform value" src="/s.gif" /></a>
                                        </apex:outputPanel>
                                        <apex:actionRegion >
	                                        <apex:outputPanel style="white-space: nowrap;" layout="block" styleClass="sfObjectView">
	                                        	<apex:inputHidden id="usesSalesforceDefaultValue" value="{!f.UsesSalesforceDefaultValue}" />
	                                            <apex:selectList size="1" value="{!f.sfObject}">
	                                                <apex:selectOptions value="{!f.Step.Manager.AvailableObjects}" />
	                                                <apex:actionSupport event="onchange" rerender="sfFieldsPanel,pageMsgs" action="{!f.changeObject}" status="changeObjectOrField">
	                                                    <apex:param value="{!f.sfObject}" name="sfObject" />
	                                                </apex:actionSupport>
	                                            </apex:selectList>
	                                            <a href="javascript:;" class="hideSFDefaultValueView" ><apex:image value="https://apps.drawloop.com/images/icons/platform/cross.png" title="use text value" /></a>
					                            <apex:actionStatus id="changeObjectOrField" >
					                                <apex:facet name="start">
					                                    <span class="statusContainer"><span class="status"><img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." /></span></span>
					                                </apex:facet>
					                            </apex:actionStatus>                            
	                                        </apex:outputPanel>
	                                        <apex:outputPanel style="white-space: nowrap;" id="sfFieldsPanel" styleClass="sfFieldView">
	                                        	<apex:outputPanel layout="block">
		                                            <apex:selectList size="1" value="{!f.sfField}" id="sfFields" styleClass="sfFields" onchange="toggleAddDaysView(this);">
		                                                <apex:selectOptions value="{!f.sfFields}" />
		                                                <!--<apex:actionSupport event="onchange" rerender="sfLookupFieldsPanel,pageMsgs" action="{!f.changeField}" status="changeObjectOrField">
		                                                    <apex:param value="{!f.sfObject}" name="sfObject" />
		                                                    <apex:param value="{!f.sfField}" name="sfField" />
		                                                </apex:actionSupport>-->
		                                            </apex:selectList>
		                                            <apex:outputPanel id="addDays" styleClass="addDaysView {!IF(f.sfField!='Today+', 'hidden', '')}">
		                                                <apex:inputText styleClass="addDays" value="{!f.todayPlus}" title="additional days" style="width: 50px;" />
		                                            </apex:outputPanel>
	                                            </apex:outputPanel>
	                                            <!-- <apex:outputPanel layout="block" id="sfLookupFieldsPanel">
		                                            <apex:selectList size="1" value="{!f.sfLookupField}" id="sfLookupFields" rendered="{!f.showLookupFieldList}">
		                                                <apex:selectOptions value="{!f.sfLookupFields}" />
		                                            </apex:selectList>
	                                            </apex:outputPanel>-->
	                                        </apex:outputPanel>
                                        </apex:actionRegion>
                                    </apex:outputPanel>
                                </apex:column>
                                <apex:column headerValue="{!$ObjectType.Loop__Form_Field__c.fields.Loop__Help_Text__c.label}" headerClass="{!IF(step.IsIgnored, 'hiddenCell', '')}" styleClass="hideOnIgnore {!IF(step.IsIgnored, 'hiddenCell', '')}">
                                    <apex:inputField value="{!f.field.Loop__Help_Text__c}" />
                                </apex:column>
                                <apex:column style="white-space: nowrap;" headerValue="{!$ObjectType.Loop__Form_Field__c.fields.Loop__List_Values__c.label}" headerClass="{!IF(step.IsIgnored, 'hiddenCell', '')}" styleClass="hideOnIgnore {!IF(step.IsIgnored, 'hiddenCell', '')}">
                                	<span class="conListValues">
	                                    <apex:inputField value="{!f.field.Loop__List_Values__c}" id="listItems" />
	                                    <apex:image styleClass="jqInfoIcon" value="https://apps.drawloop.com/images/icons/platform/information.png" id="listItemsHelp"
	                                        onclick="var o = jQuery(this).position(); jQuery('#listHelp').css({ top:o.top, left:o.left+16 }).attr('val',jQuery(this).prev().attr('id')).toggle();" />
                                    </span>
                                </apex:column>
                                <apex:column style="white-space: nowrap;" headerValue="{!$ObjectType.Loop__Form_Field__c.fields.Loop__Validation__c.label}" headerClass="{!IF(step.IsIgnored, 'hiddenCell', '')}" styleClass="hideOnIgnore {!IF(step.IsIgnored, 'hiddenCell', '')}">
                                    <apex:inputField value="{!f.field.Loop__Validation__c}" />
                                    <apex:image styleClass="jqInfoIcon" alt="info" value="https://apps.drawloop.com/images/icons/platform/information.png"
                                        onclick="var o = jQuery(this).position(); jQuery('#validationHelp').css({ top:o.top, left:o.left+16 }).attr('val',jQuery(this).prev().attr('id')).toggle();" />
                                </apex:column>
                                <apex:column headerValue="{!$ObjectType.Loop__Form_Field__c.fields.Loop__Error_Message__c.label}" headerClass="{!IF(step.IsIgnored, 'hiddenCell', '')}" styleClass="hideOnIgnore {!IF(step.IsIgnored, 'hiddenCell', '')}">
                                    <apex:inputField value="{!f.field.Loop__Error_Message__c}" />
                                </apex:column>
                            </apex:pageBlockTable>
                        </apex:pageBlockSection>
                    </apex:repeat>
                </apex:outputPanel>
                <script type="text/javascript">initializeTabs('tabs', {!NULLVALUE(currentStepIndex, 0)}, {!requestLoadFields});</script>
            </apex:outputPanel>
         </apex:pageBlock>
    </apex:form>
    <div class="jqInfo" id="listHelp" val="">
        Each item must be on its own line.  An item can contain a separate display and pass value by separating the values with a comma.
        <ul>
            <li class="pointer" val="Alabama,AL|Alaska,AK|Arizona,AZ|Arkansas,AR|California,CA|Colorado,CO|Connecticut,CT|Delaware,DE|Florida,FL|Georgia,GA|Hawaii,HI|Idaho,ID|Illinois,IL|Indiana,IN|Iowa,IA|Kansas,KS|Kentucky,KY|Louisiana,LA|Maine,ME|Maryland,MD|Massachusetts,MA|Michigan,MI|Minnesota,MN|Mississippi,MS|Missouri,MO|Montana,MT|Nebraska,NE|Nevada,NV|New Hampshire,NH|New Jersey,NJ|New Mexico,NM|New York,NY|North Carolina,NC|North Dakota,ND|Ohio,OH|Oklahoma,OK|Oregon,OR|Pennsylvania,PA|Rhode Island,RI|South Carolina,SC|South Dakota,SD|Tennessee,TN|Texas,TX|Utah,UT|Vermont,VT|Virginia,VA|Washington,WA|West Virginia,WV|Wisconsin,WI|Wyoming,WY"
                >States</li>
            <li class="pointer" val="1|2|3|4|5">Numbers 1 to 5</li>
            <li class="pointer" val="One,1|Two,2|Three,3|Four,4|Five,5">Text/Numbers 1 to 5</li>
            <li class="pointer" val="One|Two|Three|Four|Five">Text 1 to 5</li>
        </ul>
    </div>
    <div class="jqInfo" id="validationHelp" val="">
        <span>This can be any regular expression you wish to use to validate this field.</span><br />
        <br />
        <a target="_blank" href="http://regexlib.com/CheatSheet.aspx">Regular Expression Cheatsheet</a><br />
        <br />
        <span>Below is sample "required" validation.  To make any of them not required, replace the "^" at the beginning with "(^" and the "$" at the end with "$)|^$"</span>
        <ul>
            <li class="pointer" val="^\d+$">Integer</li>
            <li class="pointer" val="^(((January|February|March|April|May|June|July|August|September|October|November|December)(\s)([1-9]|0[1-9]|[12][0-9]|3[01]),(\s)([12][0-9]{3}))|(^(([1-9]|0[1-9]|1[012])[/\-]{1,1}([1-9]|0[1-9]|[12][0-9]|3[01])[/\-]{1,1}([12][0-9]{3}|[01][0-9]{1}))))$">
                Date</li>
            <li class="pointer" val="^((^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$))$">
                Email Address</li>
            <li class="pointer" val="^\d+(?:\.\d{0,2})?$">Number</li>
            <li class="pointer" val="^([0-9]*|\d*\.\d{1}?\d*)%$">Percent</li>
            <!--li class="pointer" val="">Range (replace # with numbers)</li-->
            <li class="pointer" val="^(\\$)(\d{1,3}(\,\d{3})*|([1-9]+\d*))(.\d{1,2})?$">
                U.S. Currency</li>
            <li class="pointer" val="^(1|\+1)?(\-|\.)?(\()?\d{3}(\))?(\s)?(-|\.)?\d{3}(-|\.)?\d{4}(\s)?((x|ext|ext.|extension)?(\s)?(\d{1,5}))?$">
                U.S. Phone Number</li>
            <li class="pointer" val="^\d{5}(-\d{4})?$">Zip Code</li>
            <li class="pointer" val="^([\s\S]){1,50}$">String</li>
            <li class="pointer" val="^s?https?:\/\/[-_.!~*'()a-zA-Z0-9;\/?:\@&=+\$,%#]+$">
                URL</li>
        </ul>
    </div>
</apex:page>